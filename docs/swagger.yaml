basePath: /api/v1
definitions:
  model.CourseForDoc:
    properties:
      course_code:
        type: string
      lecturer:
        type: string
      title:
        type: string
      units:
        type: integer
    required:
    - course_code
    - title
    - units
    type: object
  model.CreateStudent:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      matric_number:
        type: string
      password:
        type: string
      year_of_birth:
        minimum: 0
        type: integer
    required:
    - first_name
    - last_name
    - matric_number
    - password
    type: object
  model.Login:
    properties:
      matric_number:
        type: string
      password:
        type: string
    required:
    - matric_number
    - password
    type: object
  model.Ping:
    properties:
      email:
        type: string
    type: object
  model.UpdateCourse:
    properties:
      lecturer:
        type: string
      title:
        type: string
      units:
        type: integer
    type: object
  model.UpdateStudent:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      matric_number:
        type: string
      password:
        type: string
      year_of_birth:
        minimum: 0
        type: integer
    type: object
  utility.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        description: for errors that occur even if request is successful
      extra: {}
      message:
        type: string
      name:
        description: name of the error
        type: string
      status:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: School Management System API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: School Management System
  version: "1.0"
paths:
  /course:
    get:
      consumes:
      - application/json
      description: list all courses - Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: list all courses - Admin
      tags:
      - Course - Admin
    post:
      consumes:
      - application/json
      description: create a course - Admin
      parameters:
      - description: Course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/model.CourseForDoc'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: create a course - Admin
      tags:
      - Course - Admin
  /course/{code}:
    delete:
      consumes:
      - application/json
      description: delete a course - Admin
      parameters:
      - description: Course Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: delete a course - Admin
      tags:
      - Course - Admin
    get:
      consumes:
      - application/json
      description: get a course - Admin
      parameters:
      - description: Course Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: get a course - Admin
      tags:
      - Course - Admin
    put:
      consumes:
      - application/json
      description: update a course - Admin
      parameters:
      - description: Course Code
        in: path
        name: code
        required: true
        type: string
      - description: Course Update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/model.UpdateCourse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: update a course - Admin
      tags:
      - Course - Admin
  /course/{code}/students:
    get:
      consumes:
      - application/json
      description: list students taking a course - Admin
      parameters:
      - description: Course Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: list students taking a course - Admin
      tags:
      - Course - Admin
  /health:
    get:
      consumes:
      - application/json
      description: check api health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
      summary: check api health
      tags:
      - Health
    post:
      consumes:
      - application/json
      description: check api health
      parameters:
      - description: Ping
        in: body
        name: ping
        required: true
        schema:
          $ref: '#/definitions/model.Ping'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
      summary: check api health
      tags:
      - Health
  /login:
    post:
      consumes:
      - application/json
      description: login as an admin or student
      parameters:
      - description: Login Info
        in: body
        name: login-info
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
      summary: login as an admin or student
      tags:
      - Auth
  /student:
    get:
      consumes:
      - application/json
      description: list all students - Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: list all students - Admin
      tags:
      - Student - Admin
    post:
      consumes:
      - application/json
      description: add a student - Admin
      parameters:
      - description: Student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/model.CreateStudent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: add a student - Admin
      tags:
      - Student - Admin
  /student/{id}:
    delete:
      consumes:
      - application/json
      description: delete a student - Admin
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: delete a student - Admin
      tags:
      - Student - Admin
    get:
      consumes:
      - application/json
      description: get a student - Student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: get a student
      tags:
      - Student
    put:
      consumes:
      - application/json
      description: update a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Student Update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/model.UpdateStudent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: update a student
      tags:
      - Student
  /student/{id}/courses:
    get:
      consumes:
      - application/json
      description: list courses taken by a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: list courses taken by a student
      tags:
      - Student
    put:
      consumes:
      - application/json
      description: update or add single student courses - Admin
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Student's courses'
        in: body
        name: update
        required: true
        schema:
          items:
            $ref: '#/definitions/model.CourseForDoc'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utility.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utility.Response'
      security:
      - JWTToken: []
      summary: update or add single student courses - Admin
      tags:
      - Student - Admin
securityDefinitions:
  JWTToken:
    description: JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
